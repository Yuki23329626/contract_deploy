fs = require('fs');
const Web3 = require('web3');
const HDWalletProvider = require("truffle-hdwallet-provider");

// account information
const mnemonic = "method banner ordinary buyer series either initial drink exchange rifle little lunch";
defaultAccount = '0x382e347f834E1C897ec965eB1Af2b673900257d4';
private_keys = '2c22045da1809eb6bb6cb0d3130854f90712b7d3ffe6e9d59a22964cf422bc15';

const web3 = new Web3(new HDWalletProvider(mnemonic, 'https://rinkeby.infura.io/v3/3c8c82c3951c4cf3b61586b0202981c1'));
// console.log('web3.version:' + web3.version)

// web3.eth.defaultAccount = defaultAccount;

// web3.eth.getBalance(defaultAccount, (err, balance) => {
//   if(err){
//     console.log(error);
//   }
//   console.log(balance);
// });



// bytecode and ABI generated by Ethereum REMIX IDE

bytecode = '60806040527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476000556040518061018001604052807f02f9237295ca47bc8621941596b39c678eaa23ee728e277004670f822f5e459481526020017f040fc0cac571ae477880265d5cf5a523f2d85fd0fe8ad50e3ed7372c39f20a6d81526020017f2bdc8e594afa0b03b2307a96ec158e530d2c348e8092d5bf13d5c1cfdfe37c1081526020017f19af7ab6d60f7f71c7d24f78738a0398d5852df30235aecf713bb7301d64e65081526020017f1052c2da999227eaa015169cc81889c9b7d19492506159234156d8e64d9eaec081526020017f026b77fa28b81e14ee6ae41d23c832bcf202b792be9d816d3c8266dc11bc1da681526020017f21ca051c049db027c8a6b2d2449614e1e9b22b2223541713637f0c64b7a8c55181526020017f01b20d974e60974c19c50cbc176ee07f464e67b1fabdf4f4985c3ddf408e0e2581526020017f015863daf6bd3805c036e9f1d2a9f284dce8e098dbefcfd9411a6305b3b3a3a281526020017f025eae55cab796540e83bf06b83ae6a3956f5545a30c930be5f202cb6d2e5bd181526020017f04345e97e96bed5383165a963d1a3bdef48391a74bf5157ca6f4d824499edc2381526020017f1127a30eae56a1cebe9c4495aaadfedc8d45a5e5748d7ca7a72c2b14c5b24b3e815250600190600c61020a92919061021d565b5034801561021757600080fd5b50610282565b82600c810192821561024c579160200282015b8281111561024b578251825591602001919060010190610230565b5b509050610259919061025d565b5090565b61027f91905b8082111561027b576000816000905550600101610263565b5090565b90565b61051b806102916000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d6e8d9db14610030575b600080fd5b61003861004e565b604051610045919061048d565b60405180910390f35b60006100586103ba565b604051806040016040528060016000600c811061007157fe5b01548152602001600180600c811061008557fe5b015481525090506100946103d4565b6040518060400160405280604051806040016040528060016002600c81106100b857fe5b0154815260200160016003600c81106100cd57fe5b01548152508152602001604051806040016040528060016004600c81106100f057fe5b0154815260200160016005600c811061010557fe5b015481525081525090506101176103ba565b604051806040016040528060016006600c811061013057fe5b0154815260200160016007600c811061014557fe5b015481525090506101546103d4565b6040518060400160405280604051806040016040528060016008600c811061017857fe5b0154815260200160016009600c811061018d57fe5b0154815250815260200160405180604001604052806001600a600c81106101b057fe5b015481526020016001600b600c81106101c557fe5b015481525081525090506101db848484846101e4565b94505050505090565b60006101ef8561030d565b94506103036040518061018001604052808760000151815260200187602001518152602001866000015160006002811061022557fe5b60200201518152602001866000015160016002811061024057fe5b60200201518152602001866020015160006002811061025b57fe5b60200201518152602001866020015160016002811061027657fe5b60200201518152602001856000015181526020018560200151815260200184600001516000600281106102a557fe5b6020020151815260200184600001516001600281106102c057fe5b6020020151815260200184602001516000600281106102db57fe5b6020020151815260200184602001516001600281106102f657fe5b602002015181525061033d565b9050949350505050565b6103156103ba565b6040518060400160405280836000015181526020018360200151600054038152509050919050565b60006103476103fa565b600060208261018086600060086107d05a03f190508061039c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610393906104a8565b60405180910390fd5b6001826000600181106103ab57fe5b60200201511492505050919050565b604051806040016040528060008152602001600081525090565b60405180604001604052806103e761041c565b81526020016103f461041c565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b610447816104d9565b82525050565b600061045a601d836104c8565b91507f656c6c69707469632063757276652070616972696e67206661696c65640000006000830152602082019050919050565b60006020820190506104a2600083018461043e565b92915050565b600060208201905081810360008301526104c18161044d565b9050919050565b600082825260208201905092915050565b6000811515905091905056fea264697066735822122052705c627c203716521d3549a414e7b6ff9807bc221715d84cbaf55eb925e70e64736f6c63430006080033'

ABI = [
  {
    "inputs": [],
    "name": "testOURS",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]

// console.log('bytecode: %o', bytecode['object'])

// web3.eth.sendTransaction({
//   from: defaultAccount,
//   data: bytecode['object'] // deploying a contracrt
// }, function(error, hash){
//   console.log('error: %o', error)
//   console.log('hash: %o', hash)
// });

var gasEstimate = web3.eth.estimateGas({ data: '0x' + bytecode });
Promise.resolve(gasEstimate).then(function (value) {

  console.log('gasEstimate = ', value);
  console.log('deploying contract...');

  const contract = new web3.eth.Contract(ABI);

  contract.deploy({
    data: '0x' + bytecode,
    gas: value + 100000
  }, function (err, myContract) {
    if (!err) {
      // NOTE: The callback will fire twice!
      // Once the contract has the transactionHash property set and once its deployed on an address.

      // e.g. check tx hash on the first call (transaction send)
      if (!myContract.address) {
        console.log(`myContract.transactionHash = ${myContract.transactionHash}`); // The hash of the transaction, which deploys the contract

        // check address on the second call (contract deployed)
      } else {
        console.log(`myContract.address = ${myContract.address}`); // the contract address
        global.contractAddress = myContract.address;
      }

      // Note that the returned "myContractReturned" === "myContract",
      // so the returned "myContractReturned" object will also get the address set.
    } else {
      console.log(err);
    }
  });
});
